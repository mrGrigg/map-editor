// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var MapEditor, MapList, Routes, _ref;

    MapList = require('views/MapListView');
    MapEditor = require('views/MapEditor');
    return Routes = (function(_super) {
      __extends(Routes, _super);

      function Routes() {
        this.getMapItem = __bind(this.getMapItem, this);
        this["delete"] = __bind(this["delete"], this);
        this.edit = __bind(this.edit, this);
        this.index = __bind(this.index, this);        _ref = Routes.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Routes.prototype.routes = {
        '': 'index',
        'edit/:id': 'edit',
        'delete/:id': 'delete'
      };

      Routes.prototype.index = function() {
        return Backbone.Events.trigger('renderChildView', MapList);
      };

      Routes.prototype.edit = function(id) {
        var map;

        map = this.getMapItem(id);
        return Backbone.Events.trigger('renderChildView', MapEditor, map);
      };

      Routes.prototype["delete"] = function(id) {
        localStorage.removeItem(id);
        return Backbone.history.navigate('', true);
      };

      Routes.prototype.getMapItem = function(id) {
        var mapItem;

        mapItem = localStorage.getItem(id);
        return JSON.parse(mapItem);
      };

      return Routes;

    })(Backbone.Router);
  });

}).call(this);
