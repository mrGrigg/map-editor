// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['text!templates/mapEditor.html', 'views/PaletteView', 'views/MapView'], function(template, PaletteView, MapView) {
    var MapEditor, _ref;

    return MapEditor = (function(_super) {
      __extends(MapEditor, _super);

      function MapEditor() {
        this.saveChanges = __bind(this.saveChanges, this);
        this.cancelChanges = __bind(this.cancelChanges, this);
        this.render = __bind(this.render, this);
        this.initialize = __bind(this.initialize, this);        _ref = MapEditor.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      MapEditor.prototype.events = {
        'click .cancel-changes': 'cancelChanges',
        'click .save-changes': 'saveChanges'
      };

      MapEditor.prototype.initialize = function() {};

      MapEditor.prototype.render = function() {
        var editorTemplate, mapView, paletteView;

        editorTemplate = Handlebars.compile(template);
        this.$el.html(editorTemplate(this.model));
        paletteView = new PaletteView;
        this.$el.append(paletteView.render().el);
        mapView = new MapView({
          model: this.model
        });
        this.$el.append($('<div class="map-canvas-wrapper"></div>'));
        this.$('.map-canvas-wrapper').append(mapView.render().el);
        return this;
      };

      MapEditor.prototype.cancelChanges = function() {
        return Backbone.history.navigate('', true);
      };

      MapEditor.prototype.saveChanges = function() {
        return console.log('saving');
      };

      return MapEditor;

    })(Backbone.View);
  });

}).call(this);
