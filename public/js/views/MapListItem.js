// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['text!templates/mapListItem.html'], function(template) {
    var MapListItem, _ref;

    return MapListItem = (function(_super) {
      __extends(MapListItem, _super);

      function MapListItem() {
        this.navigate = __bind(this.navigate, this);
        this.deleteMap = __bind(this.deleteMap, this);
        this.render = __bind(this.render, this);
        this.initialize = __bind(this.initialize, this);        _ref = MapListItem.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      MapListItem.prototype.events = {
        'click .edit': 'navigate',
        'click .delete': 'deleteMap'
      };

      MapListItem.prototype.initialize = function() {};

      MapListItem.prototype.render = function() {
        var mapTemplate;

        mapTemplate = Handlebars.compile(template);
        this.$el.html(mapTemplate(this.model.toJSON()));
        return this;
      };

      MapListItem.prototype.deleteMap = function() {
        this.model.destroy();
        this.remove();
        return false;
      };

      MapListItem.prototype.navigate = function() {
        var href;

        href = this.$('.edit').attr('href');
        Backbone.history.navigate(href, true);
        return false;
      };

      return MapListItem;

    })(Backbone.View);
  });

}).call(this);
