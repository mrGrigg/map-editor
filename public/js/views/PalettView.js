// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['modules/Tiles', 'views/TileView'], function(Tiles, TileView) {
    var PalettView, _ref;

    return PalettView = (function(_super) {
      __extends(PalettView, _super);

      function PalettView() {
        this.renderTile = __bind(this.renderTile, this);
        this.render = __bind(this.render, this);
        this.initialize = __bind(this.initialize, this);        _ref = PalettView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      PalettView.prototype.id = 'palette';

      PalettView.prototype.initialize = function() {
        return this;
      };

      PalettView.prototype.render = function() {
        var data, name, tileView, tiles;

        tiles = document.createElement('div');
        for (name in Tiles) {
          data = Tiles[name];
          tileView = new TileView({
            data: data,
            name: name
          });
          $(tiles).append(tileView.render().el);
        }
        this.$el.html(tiles);
        return this;
      };

      PalettView.prototype.renderTile = function(data, name) {};

      return PalettView;

    })(Backbone.View);
  });

}).call(this);
