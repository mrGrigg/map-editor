// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function() {
    var TileView, _ref;

    return TileView = (function(_super) {
      __extends(TileView, _super);

      function TileView() {
        this.selectTile = __bind(this.selectTile, this);
        this.dragStart = __bind(this.dragStart, this);
        this.createTileImage = __bind(this.createTileImage, this);
        this.render = __bind(this.render, this);
        this.initialize = __bind(this.initialize, this);        _ref = TileView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      TileView.prototype.className = 'paletteTile';

      TileView.prototype.events = {
        'dragstart': 'dragStart',
        'click': 'selectTile'
      };

      TileView.prototype.initialize = function() {
        jQuery.event.props.push('dataTransfer');
        this.$el.attr('id', this.options.name);
        this.model = {
          name: this.options.name,
          data: this.options.data
        };
        return this.dnd = 'application/json';
      };

      TileView.prototype.render = function() {
        var image;

        image = this.createTileImage();
        this.$el.append(image);
        this.$el.attr('draggable', true);
        return this;
      };

      TileView.prototype.createTileImage = function() {
        var image;

        image = document.createElement('img');
        image.height = 32;
        image.width = 32;
        image.src = this.model.data;
        image.title = this.model.name;
        return image;
      };

      TileView.prototype.dragStart = function(event) {
        var data;

        if (event.target instanceof HTMLImageElement) {
          data = JSON.stringify(this.model);
          event.dataTransfer.setData(this.dnd, data);
          event.dataTransfer.setDragImage(event.target, 0, 0);
        } else {
          return event.preventDefault();
        }
      };

      TileView.prototype.selectTile = function() {
        return Backbone.Events.trigger('tile:selected', this.model);
      };

      return TileView;

    })(Backbone.View);
  });

}).call(this);
