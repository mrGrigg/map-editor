// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['text!templates/mapList.html', 'views/NewMapModal'], function(template, NewMapModal) {
    var MapListView, _ref;

    return MapListView = (function(_super) {
      __extends(MapListView, _super);

      function MapListView() {
        this.navigate = __bind(this.navigate, this);
        this.showNewMapDialog = __bind(this.showNewMapDialog, this);
        this.getMapItems = __bind(this.getMapItems, this);
        this.render = __bind(this.render, this);
        this.initialize = __bind(this.initialize, this);        _ref = MapListView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      MapListView.prototype.events = {
        'click .create-new': 'showNewMapDialog',
        'click a': 'navigate'
      };

      MapListView.prototype.initialize = function() {
        return this.getMapItems();
      };

      MapListView.prototype.render = function() {
        var mapTemplate, storageItems;

        mapTemplate = Handlebars.compile(template);
        storageItems = this.getMapItems();
        this.$el.html(mapTemplate(storageItems));
        return this;
      };

      MapListView.prototype.getMapItems = function() {
        var map, name, storage, storageItems;

        storage = localStorage;
        storageItems = (function() {
          var _results;

          _results = [];
          for (name in storage) {
            map = storage[name];
            _results.push(JSON.parse(map));
          }
          return _results;
        })();
        return storageItems;
      };

      MapListView.prototype.showNewMapDialog = function() {
        Backbone.Events.trigger('modal:show', NewMapModal);
        return this;
      };

      MapListView.prototype.navigate = function(event) {
        var location;

        location = $(event.target).attr('href');
        Backbone.history.navigate(location, true);
        return false;
      };

      return MapListView;

    })(Backbone.View);
  });

}).call(this);
