// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['text!templates/newMapModal.html', 'models/Map'], function(template, Map) {
    var NewMapModal, _ref;

    return NewMapModal = (function(_super) {
      __extends(NewMapModal, _super);

      function NewMapModal() {
        this.s4 = __bind(this.s4, this);
        this.guid = __bind(this.guid, this);
        this.makeNewMap = __bind(this.makeNewMap, this);
        this.closeDialog = __bind(this.closeDialog, this);
        this.render = __bind(this.render, this);
        this.initialize = __bind(this.initialize, this);        _ref = NewMapModal.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      NewMapModal.prototype.className = 'new-map modal';

      NewMapModal.prototype.events = {
        'click .cancel': 'closeDialog',
        'click .make-map': 'makeNewMap'
      };

      NewMapModal.prototype.initialize = function() {};

      NewMapModal.prototype.render = function() {
        var modalTemplate;

        modalTemplate = Handlebars.compile(template);
        this.$el.html(modalTemplate);
        return this;
      };

      NewMapModal.prototype.closeDialog = function() {
        return Backbone.Events.trigger('modal:hide');
      };

      NewMapModal.prototype.makeNewMap = function() {
        var map;

        map = {
          'name': this.$('.map-name').val(),
          'width': this.$('.map-width').val(),
          'height': this.$('.map-height').val(),
          'id': this.guid()
        };
        Backbone.Events.trigger('map:create', map);
        return Backbone.Events.trigger('modal:hide');
      };

      NewMapModal.prototype.guid = function() {
        return this.s4() + this.s4();
      };

      NewMapModal.prototype.s4 = function() {
        var random;

        random = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
        return random;
      };

      return NewMapModal;

    })(Backbone.View);
  });

}).call(this);
